int partition(int* data, int begin, int end)
{
	int pivot = data[end];
	int min = begin - 1;

	for (int max = begin; max <= end - 1; ++max)
	{
		if (data[max] <= pivot)
		{
			min++;
			int temp = data[max];
			data[max] = data[min];
			data[min] = temp;
		}
	}
	int temp = data[min+1];
	data[min+1] = data[end];
	data[end] = temp;

	return min + 1;
}

void quickSort(int* data, int begin, int end)
{
	if (begin < end)
	{
		int pivot = partition(data, begin, end);
		quickSort(data, begin, pivot - 1);
		quickSort(data, pivot + 1, end);

	}
}

void Prom_18()
{
	std::cout <<"정렬 전"<< std::endl;
	int data[10];
	for (int i = 0; i < 10; ++i) {
		data[i] = rand() % 100;
	}
	for (int i = 0; i < 10; ++i) {
		std::cout << data[i] << " ";
	}

	quickSort(data, 0, 9);

	std::cout << std::endl;
	std::cout << "정렬 후" << std::endl;

	for (int i = 0; i < 10; ++i) {
		std::cout << data[i] << " ";
	}
}